// The formatting is such that all of the "normal" function names can be safely called from ink text. These then call on external functions (or fallbacks) which start with "_". In other words: never directly call functions starting with an underscore from your text!

//
// FEATURE: Changing (and fading to) backgrounds. Done with external functions.
//
=== function FadeToImage(image, duration) // name of image and duration in seconds (e.g. 0.5)
~ (_FadeToImage(image, duration)) // background not assigned here, because it'll be done by unity when it's done.

=== function _FadeToImage(listItem, float)
    ~ Background = listItem // sets the bg when unity can't
<<i>Unity background: {listItem}</i>> 
EXTERNAL _FadeToImage(listItem, float) 

=== function FadeToColor(color, duration)   // duration in seconds (e.g. 0.5)
~ _FadeToColor(color, duration)

=== function _FadeToColor(string, float) // fade to a color.
<<i>Fade to {string}</i>> 
EXTERNAL _FadeToColor(string, float)

// 
// FEATURE: Changing what character portraits appear on screen. Done by observing variable.
// NOTE: I have to test whether this allows explicit ordering
// 
=== function Portraits_Set(images)
~ Portraits = images
<<i>Unity now shows {images}</i>> 

=== function Portraits_Add(image)
~ Portraits += image
<<i>Unity now shows {image}</i>> 

=== function Portraits_Remove(image)
~ Portraits -= image
<<i>Unity removes {image} if present</i>> 

=== function Portraits_RemoveAll()
~ Portraits = ()
<<i>Unity removes all portraits</i>> 

//
// Feature: Audio
//
// Vox. Done with external function.
=== function Vox_Play(clip, volume)// use volume between 0.0 and 1.0
~ Vox = clip // assign clip to vox list to ensure fit of argument
~ _Vox_Play(clip, volume)

=== function _Vox_Play(listItem, float) // plays audio on voice channel, unlooped
<<i>Vox: {listItem} at {float} volume</i>>   
EXTERNAL _Vox_Play(listItem, float)

// SFX. Done with external function.
=== function Sfx_Play(clip, volume)// use volume between 0.0 and 1.0
~ Sfx = clip // assign clip to sfx list to ensure fit of argument
~ _Sfx_Play(clip, volume)

=== function _Sfx_Play(listItem, float) // plays audio on sfx channel, unlooped
<<i>Sfx: {clip}</i>>
EXTERNAL _Sfx_Play(listItem, float)

// Ambiance. Handled with external function.
=== function Ambiance_Add(clip, volume) //use volume between 0.0 and 1.0
~ Ambiance += clip
~ _Ambiance_PlayAtVolume(clip, volume)

=== function _Ambiance_PlayAtVolume(listItem, float) // adds audio on an ambiance channel, looping
<<i>Ambiance: {Ambiance} </i>>
EXTERNAL _Ambiance_PlayAtVolume(listItem, float)

=== function Ambiance_Adjust(clip, newVVolume)
{ Ambiance ? clip:
    ~ _Ambiance_PlayAtVoume(clip, newVolume)
- else:
    ~ PrintWarning("{clip} Not found")
}

=== function Ambiance_Remove(clip)
~ Ambiance -= clip 
~ _Ambiance_Remove(clip)

=== function _Ambiance_Remove(listItem)
<<i>Ambiance: {Ambiance} </i>>
EXTERNAL _Ambiance_Remove(listItem)

=== function Ambiance_RemoveAll()
~ Ambiance = Ambiance.none
~ _Ambiance_StopAll()

=== function _Ambiance_RemoveAll()
<<i>Removed all ambiance. </i>>
EXTERNAL _Ambiance_RemoveAll()

// Music. Handled with external function.
=== function Music_Play(clip, volume) // play new clip or adjust volume of existing clip
~ Music = clip
~ _Music_Play(clip, volume)

=== function _Music_Play(listItem, float) // plays audio on music channel, looping // use volume between 0.0 and 1.0
<<i>Music: {Music}</i>>
EXTERNAL _Music_Play(listItem, float) 

=== function Music_Stop()
~ Music = Music.none
~ _Music_Stop()

=== function _Music_Stop()
<<i>Music: {Music}</i>>
EXTERNAL _Music_Stop()